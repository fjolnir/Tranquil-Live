<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='@rpath/LuaCocoa.framework'/>
<depends_on path='@executable_path/../Frameworks/GLMath.framework'/>
<depends_on path='/System/Library/Frameworks/Accelerate.framework'/>
<depends_on path='/System/Library/Frameworks/OpenGL.framework'/>
<depends_on path='/System/Library/Frameworks/Cocoa.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/AppKit.framework'/>
<string_constant name='ShaderLoadError' nsstring='true' value='shader.loaderror'/>
<string_constant name='kTranquilFinishedLaunching' nsstring='true' value='kTranquilFinishedLaunching'/>
<class name='Camera'>
<method selector='aspectRatio'>
<retval declared_type='GLMFloat' type='f'/>
</method>
<method selector='fov'>
<retval declared_type='GLMFloat' type='f'/>
</method>
<method selector='matrix'>
<retval declared_type='mat4_t' type='{_mat4_t=ffffffffffffffff}'/>
</method>
<method selector='orientation'>
<retval declared_type='quat_t' type='{_quat_t={_vec3_t=fff}f}'/>
</method>
<method selector='position'>
<retval declared_type='vec4_t' type='{_vec4_t=ffff}'/>
</method>
<method selector='setAspectRatio:'>
<arg name='aspectRatio' declared_type='GLMFloat' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFov:'>
<arg name='fov' declared_type='GLMFloat' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrientation:'>
<arg name='orientation' declared_type='quat_t' type='{_quat_t={_vec3_t=fff}f}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg name='position' declared_type='vec4_t' type='{_vec4_t=ffff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZoom:'>
<arg name='zoom' declared_type='GLMFloat' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unProjectPoint:'>
<arg name='aPoint' declared_type='vec4_t' type='{_vec4_t=ffff}' index='0'/>
<retval declared_type='vec4_t' type='{_vec4_t=ffff}'/>
</method>
<method selector='updateMatrix'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewportSize' class_method='true'>
<retval declared_type='vec4_t' type='{_vec4_t=ffff}'/>
</method>
<method selector='zoom'>
<retval declared_type='GLMFloat' type='f'/>
</method>
</class>
<class name='Light'>
<method selector='ambientColor'>
<retval declared_type='vec4_t' type='{_vec4_t=ffff}'/>
</method>
<method selector='diffuseColor'>
<retval declared_type='vec4_t' type='{_vec4_t=ffff}'/>
</method>
<method selector='position'>
<retval declared_type='vec4_t' type='{_vec4_t=ffff}'/>
</method>
<method selector='setAmbientColor:'>
<arg name='ambientColor' declared_type='vec4_t' type='{_vec4_t=ffff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDiffuseColor:'>
<arg name='diffuseColor' declared_type='vec4_t' type='{_vec4_t=ffff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg name='position' declared_type='vec4_t' type='{_vec4_t=ffff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpecularColor:'>
<arg name='specularColor' declared_type='vec4_t' type='{_vec4_t=ffff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='specularColor'>
<retval declared_type='vec4_t' type='{_vec4_t=ffff}'/>
</method>
</class>
<class name='Logger'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='log:'>
<arg name='aStr' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedLogger' class_method='true'>
<retval declared_type='Logger*' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='invalidate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadPlugin' class_method='true'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='logger:receivedMessage:'>
<arg name='aLogger' declared_type='Logger*' type='@' index='0'/>
<arg name='aMessage' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='render:'>
<arg name='aScene' declared_type='Scene*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scriptContext:encounteredError:'>
<arg name='aContext' declared_type='ScriptContext*' type='@' index='0'/>
<arg name='aError' declared_type='NSError*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='state'>
<retval declared_type='State*' type='@'/>
</method>
</class>
<class name='Scene'>
<method selector='addImmediateModeObject:'>
<arg name='aObject' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='addLight:'>
<arg name='aLight' declared_type='Light*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObject:'>
<arg name='aObject' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='ambientLight'>
<retval declared_type='vec4_t' type='{_vec4_t=ffff}'/>
</method>
<method selector='camera'>
<retval declared_type='Camera*' type='@'/>
</method>
<method selector='clear'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearColor'>
<retval declared_type='vec4_t' type='{_vec4_t=ffff}'/>
</method>
<method selector='currentState'>
<retval declared_type='State*' type='@'/>
</method>
<method selector='globalContext' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='globalScene' class_method='true'>
<retval declared_type='Scene*' type='@'/>
</method>
<method selector='immediateModeObjects'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initializeGLState'>
<retval declared_type='void' type='v'/>
</method>
<method selector='lights'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objects'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='pixelFormat' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='popState'>
<retval declared_type='void' type='v'/>
</method>
<method selector='projMatStack'>
<retval declared_type='matrix_stack_t*' type='^{_matrix_stack_t=^{_mat4_t}II}'/>
</method>
<method selector='pushState'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeLight:'>
<arg name='aLight' declared_type='Light*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObject:'>
<arg name='aObject' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='render'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmbientLight:'>
<arg name='ambientLight' declared_type='vec4_t' type='{_vec4_t=ffff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCamera:'>
<arg name='camera' declared_type='Camera*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClearColor:'>
<arg name='clearColor' declared_type='vec4_t' type='{_vec4_t=ffff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stateStack'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='withState:'>
<arg name='block' function_pointer='true' declared_type='void (^)(State *)' type='@?' index='0'>
<arg declared_type='State*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='worldMatStack'>
<retval declared_type='matrix_stack_t*' type='^{_matrix_stack_t=^{_mat4_t}II}'/>
</method>
</class>
<class name='ScriptContext'>
<method selector='addSearchPath:'>
<arg name='aPath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='executeFile:error:'>
<arg name='aPath' declared_type='NSString*' type='@' index='0'/>
<arg name='aoErr' declared_type='NSError**' type='^@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='executeFunction:withObjects:error:'>
<arg name='aFunction' declared_type='NSString*' type='@' index='0'/>
<arg name='aArgs' declared_type='NSArray*' type='@' index='1'/>
<arg name='aoErr' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='executeScript:error:'>
<arg name='aSource' declared_type='NSString*' type='@' index='0'/>
<arg name='aoErr' declared_type='NSError**' type='^@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='loadBridgeSupport:'>
<arg name='aPath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedContext' class_method='true'>
<retval declared_type='ScriptContext*' type='@'/>
</method>
</class>
<class name='Shader'>
<method selector='activeShader' class_method='true'>
<retval declared_type='Shader*' type='@'/>
</method>
<method selector='getAttributeLocation:'>
<arg name='aAttribName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='GLint' type='i'/>
</method>
<method selector='getAttributes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='getUniformLocation:'>
<arg name='aUniformName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='GLint' type='i'/>
</method>
<method selector='getUniforms'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithWithFragmentShader:vertexShader:'>
<arg name='aFragSrc' declared_type='NSString*' type='@' index='0'/>
<arg name='aVertSrc' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='makeActive'>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeInactive'>
<retval declared_type='void' type='v'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='program'>
<retval declared_type='GLuint' type='I'/>
</method>
<method selector='setName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shaderWithName:fragmentShader:vertexShader:' class_method='true'>
<arg name='aName' declared_type='NSString*' type='@' index='0'/>
<arg name='aFragSrc' declared_type='NSString*' type='@' index='1'/>
<arg name='aVertSrc' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='Shader*' type='@'/>
</method>
<method selector='withAttribute:do:'>
<arg name='aAttribName' declared_type='NSString*' type='@' index='0'/>
<arg name='block' function_pointer='true' declared_type='void (^)(GLuint)' type='@?' index='1'>
<arg declared_type='GLuint' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='withUniform:do:'>
<arg name='aUniformName' declared_type='NSString*' type='@' index='0'/>
<arg name='block' function_pointer='true' declared_type='void (^)(GLuint)' type='@?' index='1'>
<arg declared_type='GLuint' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='State'>
<method selector='ambientLight'>
<retval declared_type='vec4_t' type='{_vec4_t=ffff}'/>
</method>
<method selector='antiAlias'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='applyToScene:'>
<arg name='aScene' declared_type='Scene*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='color'>
<retval declared_type='vec4_t' type='{_vec4_t=ffff}'/>
</method>
<method selector='cullBackFace'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='drawNormals'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='drawOrigin'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='drawPoints'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='drawWireframe'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ignoreDepth'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lineWidth'>
<retval declared_type='GLMFloat' type='f'/>
</method>
<method selector='noZWrite'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='opacity'>
<retval declared_type='GLMFloat' type='f'/>
</method>
<method selector='pointRadius'>
<retval declared_type='GLMFloat' type='f'/>
</method>
<method selector='setAmbientLight:'>
<arg name='ambientLight' declared_type='vec4_t' type='{_vec4_t=ffff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAntiAlias:'>
<arg name='antiAlias' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg name='color' declared_type='vec4_t' type='{_vec4_t=ffff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCullBackFace:'>
<arg name='cullBackFace' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawNormals:'>
<arg name='drawNormals' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawOrigin:'>
<arg name='drawOrigin' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawPoints:'>
<arg name='drawPoints' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawWireframe:'>
<arg name='drawWireframe' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIgnoreDepth:'>
<arg name='ignoreDepth' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineWidth:'>
<arg name='lineWidth' declared_type='GLMFloat' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNoZWrite:'>
<arg name='noZWrite' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg name='opacity' declared_type='GLMFloat' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPointRadius:'>
<arg name='pointRadius' declared_type='GLMFloat' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShader:'>
<arg name='shader' declared_type='Shader*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShininess:'>
<arg name='shininess' declared_type='GLMFloat' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg name='texture' declared_type='Texture*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransform:'>
<arg name='transform' declared_type='mat4_t' type='{_mat4_t=ffffffffffffffff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnlit:'>
<arg name='unlit' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shader'>
<retval declared_type='Shader*' type='@'/>
</method>
<method selector='shininess'>
<retval declared_type='GLMFloat' type='f'/>
</method>
<method selector='texture'>
<retval declared_type='Texture*' type='@'/>
</method>
<method selector='transform'>
<retval declared_type='mat4_t' type='{_mat4_t=ffffffffffffffff}'/>
</method>
<method selector='unapplyToScene:'>
<arg name='aScene' declared_type='Scene*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unlit'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='Texture'>
<method selector='initWithContentsOfFile:minFilter:maxFilter:buildMipMaps:'>
<arg name='aPath' declared_type='NSString*' type='@' index='0'/>
<arg name='aMinFilter' declared_type='GLuint' type='I' index='1'/>
<arg name='aMaxFilter' declared_type='GLuint' type='I' index='2'/>
<arg name='aShouldBuildMipMaps' declared_type='BOOL' type='B' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='load:' class_method='true'>
<arg name='aPath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='Texture*' type='@'/>
</method>
<method selector='loadTextureAtPath:minFilter:maxFilter:buildMipMaps:' class_method='true'>
<arg name='aPath' declared_type='NSString*' type='@' index='0'/>
<arg name='aMinFilter' declared_type='GLuint' type='I' index='1'/>
<arg name='aMaxFilter' declared_type='GLuint' type='I' index='2'/>
<arg name='aShouldBuildMipMaps' declared_type='BOOL' type='B' index='3'/>
<retval declared_type='GLuint' type='I'/>
</method>
<method selector='texId'>
<retval declared_type='GLuint' type='I'/>
</method>
<method selector='textureWithContentsOfFile:minFilter:maxFilter:buildMipMaps:' class_method='true'>
<arg name='aPath' declared_type='NSString*' type='@' index='0'/>
<arg name='aMinFilter' declared_type='GLuint' type='I' index='1'/>
<arg name='aMaxFilter' declared_type='GLuint' type='I' index='2'/>
<arg name='aShouldBuildMipMaps' declared_type='BOOL' type='B' index='3'/>
<retval declared_type='Texture*' type='@'/>
</method>
</class>
</signatures>
